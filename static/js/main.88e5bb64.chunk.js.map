{"version":3,"sources":["components/card.jsx","components/card-list.jsx","components/seach-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","personajes","image","name","status","species","type","gender","origin","location","CardList","map","id","SearchBox","placeholder","handleChange","onChange","App","componentDidMount","fetchData","currentpage","a","fetch","state","then","res","json","response","setState","results","e","searchField","target","value","bind","this","filteredpersonajes","filter","toLowerCase","includes","previouspage","nextpage","console","log","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAGaA,EAAK,SAACC,GAAD,OACd,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,aAAaD,UAAU,QAAQE,IAAKH,EAAMI,WAAWC,QAC9D,6BAAKL,EAAMI,WAAWE,OACtB,+BACI,6BAAI,wCAAWN,EAAMI,WAAWG,YAChC,6BAAI,0CAAaP,EAAMI,WAAWI,aAClC,6BAAI,uCAAUR,EAAMI,WAAWK,UAC/B,6BAAI,yCAAYT,EAAMI,WAAWM,YACjC,6BAAI,+CAAkBV,EAAMI,WAAWO,OAAOL,UAC9C,6BAAI,2CAAcN,EAAMI,WAAWQ,SAASN,iBCT3CO,EAAS,SAACb,GACnB,OAEI,qBAAKC,UAAU,YAAf,SAEID,EAAMI,WAAWU,KAAI,SAAAV,GAAU,OAC3B,cAAC,EAAD,CAA0BA,WAAYA,GAA3BA,EAAWW,UCPzBC,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBACIjB,UAAU,SACVQ,KAAK,SACLQ,YAAaA,EACbE,SAAUD,MCwEHE,E,kDAzEb,aAAe,IAAD,8BACZ,gBAWFC,kBAAoB,WAClB,EAAKC,UAAU,EAAKC,cAbR,EAgBdD,UAhBc,sBAgBF,sBAAAE,EAAA,sEACJC,MAAM,mDAAD,OAC0C,EAAKC,MAAMH,cAE7DI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAc,EAAKC,SAAS,CAAE3B,WAAY0B,EAASE,aALjD,2CAhBE,EAwBdd,aAAe,SAACe,GACd,EAAKF,SAAS,CAAEG,YAAaD,EAAEE,OAAOC,SAvBtC,EAAKV,MAAQ,CACXtB,WAAY,GACZ8B,YAAa,GACbX,YAAa,GAEf,EAAKL,aAAe,EAAKA,aAAamB,KAAlB,gBAPR,E,0CA4Bd,WAAU,IAAD,SAC0CC,KAAKZ,MAA9CtB,EADD,EACCA,WAAY8B,EADb,EACaA,YAAaX,EAD1B,EAC0BA,YAC3BgB,EAAqBnC,EAAWoC,QAAO,SAACpC,GAAD,OAC3CA,EAAWE,KAAKmC,cAAcC,SAASR,EAAYO,kBAG/CE,EAAY,uCAAG,sBAAAnB,EAAA,2DACfD,EAAc,GADC,gCAEX,EAAKQ,SAAS,CAAER,YAAaA,EAAc,IAFhC,OAGjB,EAAKD,UAAUC,GAHE,0DAAH,qDAQZqB,EAAQ,uCAAG,sBAAApB,EAAA,sEACT,EAAKO,SAAS,CAAER,YAAaA,EAAc,IADlC,OAEf,EAAKD,UAAUC,GAFA,2CAAH,qDAOd,OAFAsB,QAAQC,IAAIvB,GACZsB,QAAQC,IAAI1C,GAEV,sBAAKH,UAAU,MAAf,UACE,oDACA,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,CACEgB,YAAY,iCACZC,aAAcoB,KAAKpB,eAGrB,sBAAKjB,UAAU,gCAAf,UACE,wBAAQA,UAAU,cAAc8C,QAASJ,EAAzC,sBAGA,wBAAQ1C,UAAU,cAAc8C,QAASH,EAAzC,wBAKJ,cAAC,EAAD,CAAUxC,WAAYmC,W,GApEZS,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.88e5bb64.chunk.js","sourcesContent":["import React from 'react';\r\nimport'./card.css';\r\n\r\nexport const Card=(props)=>(\r\n    <div className='card-character'>\r\n        <img alt=\"personajes\" className='image' src={props.personajes.image}></img>\r\n        <h3>{props.personajes.name}</h3>\r\n        <ul>\r\n            <li><p>State: {props.personajes.status}</p></li>\r\n            <li><p>Species: {props.personajes.species}</p></li>\r\n            <li><p>Type: {props.personajes.type}</p></li>\r\n            <li><p>Gender: {props.personajes.gender}</p></li>\r\n            <li><p>Origin place: {props.personajes.origin.name}</p></li>\r\n            <li><p>Location: {props.personajes.location.name}</p></li>\r\n        </ul>\r\n    </div>\r\n\r\n)","import React from 'react';\r\nimport {Card} from './card';\r\nimport './card.css'\r\n\r\nexport const CardList=(props)=>{\r\n    return(\r\n    \r\n        <div className='card-list'>\r\n        {\r\n            props.personajes.map(personajes => \r\n                <Card key={personajes.id} personajes={personajes}/>)\r\n        }\r\n        </div>)\r\n}","import React from 'react'\r\nimport './search-box.css'\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) =>(\r\n    <input \r\n        className='search'\r\n        type='search' \r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n)","import { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list\";\nimport { SearchBox } from \"./components/seach-box\";\n\n//Declaración de constructor y arreglo que almacenará los datos de la API\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      personajes: [],\n      searchField: \"\",\n      currentpage: 1\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  //\n\n  componentDidMount = () => {\n    this.fetchData(this.currentpage);\n  };\n\n  fetchData = async () => {\n    await fetch(\n      `https://rickandmortyapi.com/api/character/?page=${this.state.currentpage}`\n    )\n      .then((res) => res.json())\n      .then((response) => this.setState({ personajes: response.results }));\n  };\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { personajes, searchField, currentpage } = this.state;\n    const filteredpersonajes = personajes.filter((personajes) =>\n      personajes.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    const previouspage = async () => {\n      if (currentpage > 1) {\n        await this.setState({ currentpage: currentpage - 1 });\n        this.fetchData(currentpage);\n      } else {\n      }\n    };\n\n    const nextpage = async () => {\n      await this.setState({ currentpage: currentpage + 1 });\n      this.fetchData(currentpage);\n    };\n\n    console.log(currentpage);\n    console.log(personajes);\n    return (\n      <div className=\"App\">\n        <h1>Rick and Morty API</h1>\n        <div className=\"mb-4\">\n          <SearchBox\n            placeholder=\"Search your favorite character\"\n            handleChange={this.handleChange}\n          />\n\n          <div className=\"d-flex justify-content-evenly\">\n            <button className=\"btn-primary\" onClick={previouspage}>\n              Previous\n            </button>\n            <button className=\"btn-primary\" onClick={nextpage}>\n              Next\n            </button>\n          </div>\n        </div>\n        <CardList personajes={filteredpersonajes} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}